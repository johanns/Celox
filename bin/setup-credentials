#!/usr/bin/env ruby
# frozen_string_literal: true

require 'securerandom'
require 'fileutils'
require 'yaml'

begin
  require 'active_support/encrypted_file'
rescue LoadError
  puts "❌ Error: ActiveSupport gem not found"
  puts "   Please ensure you're in a Rails project directory and run:"
  puts "   bundle install"
  exit(1)
end

class CredentialsSetup
  def run
    puts "🔐 Rails Credentials Setup"
    puts "=" * 30
    puts

    generate_credentials
    show_usage_info
  end

  private

  def generate_credentials
    # Check if credentials already exist
    if File.exist?('config/credentials.yml.enc')
      puts "⚠️  Found existing config/credentials.yml.enc"
      if confirm("Overwrite existing credentials?")
        puts "📁 Backing up existing credentials to config/credentials.yml.enc.backup"
        FileUtils.cp('config/credentials.yml.enc', 'config/credentials.yml.enc.backup')

        if File.exist?('config/master.key')
          puts "📁 Backing up existing master key to config/master.key.backup"
          FileUtils.cp('config/master.key', 'config/master.key.backup')
        end
      else
        puts "ℹ️  Keeping existing credentials file"
        return
      end
    end

    # Ensure config directory exists
    FileUtils.mkdir_p('config')

    master_key = SecureRandom.hex(16)

    credentials_content = {
      secret_key_base: SecureRandom.hex(32)
    }.to_yaml

    # Write master key
    File.write('config/master.key', master_key)
    File.chmod(0600, 'config/master.key') # Secure permissions

    # Encrypt and write credentials
    encrypted_file = ActiveSupport::EncryptedFile.new(
      content_path: 'config/credentials.yml.enc',
      key_path: 'config/master.key',
      env_key: 'RAILS_MASTER_KEY',
      raise_if_missing_key: true
    )

    encrypted_file.write(credentials_content)

    puts "✅ Generated config/credentials.yml.enc and config/master.key"
    puts "✅ Set secure permissions on config/master.key"
    puts
  end

  def show_usage_info
    puts "📋 Usage Information:"
    puts "=" * 30
    puts "• config/master.key contains the encryption key"
    puts "• config/credentials.yml.enc contains encrypted secrets"
    puts "• secret_key_base is automatically generated"
    puts
    puts "⚠️  Security Notes:"
    puts "• Keep config/master.key secure and NEVER commit to version control"
    puts "• Add config/master.key to your .gitignore"
    puts "• Commit config/credentials.yml.enc to version control"
    puts
    puts "🔧 Managing Credentials:"
    puts "• View: rails credentials:show"
    puts "• Edit: rails credentials:edit"
    puts "• Access in code: Rails.application.credentials.secret_key_base"
    puts
    puts "🚀 For Kamal Deployment:"
    puts "• Set RAILS_MASTER_KEY environment variable to the contents of config/master.key"
    puts "• Example: export RAILS_MASTER_KEY=$(cat config/master.key)"
    puts
  end

  def confirm(question)
    loop do
      print "#{question} (y/n): "
      answer = gets.chomp.downcase
      return true if %w[y yes].include?(answer)
      return false if %w[n no].include?(answer)

      puts "Please enter 'y' or 'n'"
    end
  end
end

# Run the setup if called directly
CredentialsSetup.new.run if __FILE__ == $PROGRAM_NAME
